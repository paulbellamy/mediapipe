# MediaPipe hand tracking rendering subgraph.

type: "RendererSubgraph"

input_stream: "IMAGE:input_image"
input_stream: "DETECTIONS:detections"
input_stream: "LANDMARKS:landmarks"
input_stream: "NORM_RECT:rect"
output_stream: "IMAGE:output_image"

# Converts detections to drawing primitives for annotation overlay.
node {
  calculator: "DetectionsToRenderDataCalculator"
  input_stream: "DETECTIONS:detections"
  output_stream: "RENDER_DATA:detection_render_data"
  node_options: {
    [type.googleapis.com/mediapipe.DetectionsToRenderDataCalculatorOptions] {
      thickness: 4.0
      color { r: 0 g: 255 b: 0 }
    }
  }
}

# Converts landmarks to drawing primitives for annotation overlay.
node {
  calculator: "LandmarksToRenderDataCalculator"
  input_stream: "NORM_LANDMARKS:landmarks"
  output_stream: "RENDER_DATA:landmark_render_data"
  node_options: {
    [type.googleapis.com/mediapipe.LandmarksToRenderDataCalculatorOptions] {
      landmark_connections: [
        9, 7,   # Pair(BodyPart.LEFT_WRIST, BodyPart.LEFT_ELBOW),
        7, 5,   # Pair(BodyPart.LEFT_ELBOW, BodyPart.LEFT_SHOULDER),
        5, 6,   # Pair(BodyPart.LEFT_SHOULDER, BodyPart.RIGHT_SHOULDER),
        6, 8,   # Pair(BodyPart.RIGHT_SHOULDER, BodyPart.RIGHT_ELBOW),
        8, 10,  # Pair(BodyPart.RIGHT_ELBOW, BodyPart.RIGHT_WRIST),
        5, 11,  # Pair(BodyPart.LEFT_SHOULDER, BodyPart.LEFT_HIP),
        11, 12, # Pair(BodyPart.LEFT_HIP, BodyPart.RIGHT_HIP),
        12, 6,  # Pair(BodyPart.RIGHT_HIP, BodyPart.RIGHT_SHOULDER),
        11, 13, # Pair(BodyPart.LEFT_HIP, BodyPart.LEFT_KNEE),
        13, 15, # Pair(BodyPart.LEFT_KNEE, BodyPart.LEFT_ANKLE),
        12, 14, # Pair(BodyPart.RIGHT_HIP, BodyPart.RIGHT_KNEE),
        14, 16  # Pair(BodyPart.RIGHT_KNEE, BodyPart.RIGHT_ANKLE)
      ]
      landmark_color { r: 255 g: 0 b: 0 }
      connection_color { r: 0 g: 255 b: 0 }
      thickness: 4.0
    }
  }
}

# Converts normalized rects to drawing primitives for annotation overlay.
node {
  calculator: "RectToRenderDataCalculator"
  input_stream: "NORM_RECT:rect"
  output_stream: "RENDER_DATA:rect_render_data"
  node_options: {
    [type.googleapis.com/mediapipe.RectToRenderDataCalculatorOptions] {
      filled: false
      color { r: 255 g: 0 b: 0 }
      thickness: 4.0
    }
  }
}

# Draws annotations and overlays them on top of the input images.
node {
  calculator: "AnnotationOverlayCalculator"
  input_stream: "INPUT_FRAME_GPU:input_image"
  input_stream: "detection_render_data"
  input_stream: "landmark_render_data"
  input_stream: "rect_render_data"
  output_stream: "OUTPUT_FRAME_GPU:output_image"
}
